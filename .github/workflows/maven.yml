# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java Maven App

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:


  packagebuild:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Build with Maven
      run: mvn clean package --file pom.xml
    - run: mkdir staging && cp target/*.war staging
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: maven-web-application
        path: staging

  Dockerbuild:
    runs-on: ubuntu-latest
    needs: packagebuild
    steps:
    - name: checkout repo
      uses: actions/checkout@v3
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: maven-web-application
    - name: View content of artifact
      run: ls -R
    - name: Login Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Publish to Docker Hub
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_MAVEN_REPONAME }}:latest, ${{ secrets.DOCKERHUB_MAVEN_REPONAME }}:${{github.sha}}

  update-manifest-repo:
    runs-on: ubuntu-latest
    needs: Dockerbuild
    steps:
    - uses: actions/checkout@v3
      with:
        repository: Git-oga1/manifest
        ref: 'main'
        token: ${{ secrets.G_TOKEN }}
        persist-credentials: true
    - name: change deplotment tag
      run: |
        cd ./k8-web-app 
        sed -i "s#${{ secrets.DOCKERHUB_MAVEN_REPONAME }}:*#${{ secrets.DOCKERHUB_MAVEN_REPONAME }}:${{github.sha}}#g" mavenwebappdeployment.yaml
        git config --global user.email "tonix2002@gmail.com"
        git config --global user.name "Git-LAnthony" 
        git add -A
        git commit -am "Deployment image tag ${{github.sha}}" 
        git push

# echo ${{ github.sha}} &&\      
# sed -i "s#${{ secrets.DOCKERHUB_MAVEN_REPONAME}}:*#${{ secrets.DOCKERHUB_MAVEN_REPONAME }}:${{github.sha}}#g" mavenwebappdeployment.yaml &&\
# sed -i "s#DockerLAnthony/maven-web-application:latest#DockerLAnthony/maven-web-application:${{github.sha}}#g" mavenwebappdeployment.yaml
# sed -i "s#DockerLAnthony/maven-web-application:latest#DockerLAnthony/maven-web-application:${{github.sha}}#g" mavenwebappdeployment.yaml



