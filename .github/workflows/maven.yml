# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java Maven App

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:


  packagebuild:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Build with Maven
      run: mvn clean package --file pom.xml
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: maven-wab-application
        path: target/*.war

  Dockerbuild:
    runs-on: ubuntu-latest
    needs: packagebuild
    steps:
    - name: checkout repo
      uses: actions/checkout@v3
    - name: Download artifact
      uses: actions/upload-artifact@v3
      with:
        name: maven-wab-application
    - name: View content of artifact
      run: ls -R
    #   uses: docker/login-action@v2
    #   with:
    #     username: ${{ secrets.DOCKERHUB_USERNAME }}
    #     password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Publish to Docker Hub
      # - name: Login to Docker Hub
      uses: docker/build-push-action@v4
      with:
        context: .
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        push: true
        repository: ${{ secrets.DOCKERHUB_MAVEN_REPONAME }}
        tags: ${{ secrets.DOCKERHUB_MAVEN_REPONAME }}:latest, ${{ secrets.DOCKERHUB_MAVEN_REPONAME }}:${{github.sha}}

  update-manifest-repo:
    runs-on: ubuntu-latest
    needs: Dockerbuild
    steps:
    - uses: actions/checkout@v3
      with:
        repository: Git-oga1/manifest
        ref: 'main'
        token: ${{ secrets.G_TOKEN }}
    - name: change image tag
      # path: k8-web-app
      run: / sed -i "s#${{ secrets.DOCKERHUB_MAVEN_REPONAME}}:*#${{ secrets.DOCKERHUB_MAVEN_REPONAME }}:${{github.sha}}#g" mavenwebappdeployment.yaml && \ git add -A && \ git commit -am "Deployment image tag ${{github.sha}}"
    - run: git push origin main



