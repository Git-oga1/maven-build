# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java Maven App

on:
  # push:
  #   branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:

  Code-review:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Lint Code Base
      uses: github/super-linter@v4
    env:
      VALIDATE_ALL_CODEBASE: false
      DEFAULT_BRANCH: master
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  Packagebuild:
    runs-on: ubuntu-latest
    needs: Code-review
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Build with Maven
      run: mvn clean package --file pom.xml
    - run: mkdir staging && cp target/*.war staging
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: maven-web-application
        path: staging

  Semantic-versioning:
    runs-on: ubuntu-latest
    needs: Packagebuild
    steps:
    - name: checkout repo
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: versioning
      id: versioning
      uses: paulhatch/semantic-version@v5.0.2
      with:
        tag_prefix: "v"
        major_pattern: "BREAKING CHANGE:"
        minor_pattern: "feat:"
        version_format: "${major}.${minor}.${patch}-prerelease${increment}"


  Docker-build-Push:
    runs-on: ubuntu-latest
    needs: Semantic-versioning
    steps:
    - name: checkout repo
      uses: actions/checkout@v3
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: maven-web-application
    - name: Login Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Publish to Docker Hub
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_MAVEN_REPONAME }}:latest, ${{ secrets.DOCKERHUB_MAVEN_REPONAME }}:${{steps.versioning.outputs.version}}


